// backend/test_ollama.js
// Test script for Ollama service with Arabic and English support

const { ollamaChat, checkOllamaHealth, detectLanguage } = require('./src/services/ollama');

console.log('\nüß™ OLLAMA SERVICE TEST SCRIPT');
console.log('=' .repeat(60));

async function runTests() {
  // Test 1: Health Check
  console.log('\nüìã Test 1: Health Check');
  console.log('-'.repeat(60));
  const isHealthy = await checkOllamaHealth();
  
  if (!isHealthy) {
    console.log('\n‚ùå FAILED: Ollama is not running!');
    console.log('\nüí° Setup Instructions:');
    console.log('   1. Install Ollama from: https://ollama.com/download/windows');
    console.log('   2. Open PowerShell and run: ollama pull mistral');
    console.log('   3. Verify with: ollama list');
    console.log('   4. Run this test again\n');
    process.exit(1);
  }
  
  console.log('‚úÖ Ollama is running and ready!\n');
  
  // Test 2: Language Detection
  console.log('üìã Test 2: Language Detection');
  console.log('-'.repeat(60));
  
  const testTexts = [
    { text: 'Hello, how are you?', expected: 'en' },
    { text: 'ŸÖÿ±ÿ≠ÿ®ÿßŸãÿå ŸÉŸäŸÅ ÿ≠ÿßŸÑŸÉÿü', expected: 'ar' },
    { text: 'What is Ooredoo?', expected: 'en' },
    { text: 'ŸÖÿß ŸáŸä ÿÆÿØŸÖÿßÿ™ ÿ£Ÿàÿ±ŸäÿØŸàÿü', expected: 'ar' }
  ];
  
  for (const test of testTexts) {
    const detected = detectLanguage(test.text);
    const status = detected === test.expected ? '‚úÖ' : '‚ùå';
    console.log(`${status} "${test.text.substring(0, 30)}..." ‚Üí ${detected} (expected: ${test.expected})`);
  }
  
  // Test 3: English Query
  console.log('\nüìã Test 3: English Query');
  console.log('-'.repeat(60));
  console.log('Query: "What services does Ooredoo offer for B2B customers?"');
  console.log('Processing...\n');
  
  const englishResponse = await ollamaChat('What services does Ooredoo offer for B2B customers?');
  
  if (englishResponse) {
    console.log('‚úÖ Response received:');
    console.log(englishResponse);
  } else {
    console.log('‚ùå No response received');
  }
  
  // Test 4: Arabic Query
  console.log('\nüìã Test 4: Arabic Query');
  console.log('-'.repeat(60));
  console.log('Query: "ŸÖÿß ŸáŸä ÿÆÿØŸÖÿßÿ™ ÿ£Ÿàÿ±ŸäÿØŸà ŸÑŸÑÿ¥ÿ±ŸÉÿßÿ™ ÿßŸÑÿµÿ∫Ÿäÿ±ÿ© ŸàÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©ÿü"');
  console.log('Processing...\n');
  
  const arabicResponse = await ollamaChat('ŸÖÿß ŸáŸä ÿÆÿØŸÖÿßÿ™ ÿ£Ÿàÿ±ŸäÿØŸà ŸÑŸÑÿ¥ÿ±ŸÉÿßÿ™ ÿßŸÑÿµÿ∫Ÿäÿ±ÿ© ŸàÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©ÿü');
  
  if (arabicResponse) {
    console.log('‚úÖ Response received:');
    console.log(arabicResponse);
  } else {
    console.log('‚ùå No response received');
  }
  
  // Test 5: Customer-specific Query
  console.log('\nüìã Test 5: Customer-specific Query with ID');
  console.log('-'.repeat(60));
  console.log('Query: "Tell me about my account" (Customer: SME000201)');
  console.log('Processing...\n');
  
  const customerResponse = await ollamaChat('Tell me about my account status and services', 'SME000201');
  
  if (customerResponse) {
    console.log('‚úÖ Response received:');
    console.log(customerResponse);
  } else {
    console.log('‚ùå No response received');
  }
  
  // Test 6: Mixed Language Handling
  console.log('\nüìã Test 6: Switching Languages');
  console.log('-'.repeat(60));
  console.log('First query in English, then Arabic...\n');
  
  const q1 = await ollamaChat('Hello, I need help');
  console.log('English: ‚úÖ', q1 ? q1.substring(0, 100) + '...' : 'No response');
  
  const q2 = await ollamaChat('ŸÖÿ±ÿ≠ÿ®ÿßŸãÿå ÿ£ÿ≠ÿ™ÿßÿ¨ ŸÖÿ≥ÿßÿπÿØÿ©');
  console.log('Arabic: ‚úÖ', q2 ? q2.substring(0, 100) + '...' : 'No response');
  
  // Summary
  console.log('\n' + '='.repeat(60));
  console.log('üéâ ALL TESTS COMPLETED!');
  console.log('='.repeat(60));
  console.log('\n‚úÖ Your Ollama service is working correctly');
  console.log('‚úÖ Arabic and English detection is working');
  console.log('‚úÖ Ready to use in production\n');
  console.log('üí° Next steps:');
  console.log('   1. Start backend: npm run dev');
  console.log('   2. Start frontend: cd ../frontend && npm run dev');
  console.log('   3. Test in browser with both Arabic and English queries\n');
}

// Run tests
runTests().catch(error => {
  console.error('\n‚ùå TEST FAILED:', error);
  console.error('\nüí° Make sure Ollama is installed and running:');
  console.error('   - Download: https://ollama.com/download/windows');
  console.error('   - Install and run: ollama pull mistral');
  console.error('   - Verify: ollama list\n');
  process.exit(1);
});
